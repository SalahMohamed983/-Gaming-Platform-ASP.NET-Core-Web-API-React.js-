using DataAccessLayer.Entities;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System.Security.Claims;

namespace GamingApi.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class UserController : ControllerBase
    {
        private readonly IUsers _user;

        public UserController(IUsers user) {
            _user = user;
        }

        [HttpGet("me")]
        [Authorize]
        public async Task<IActionResult> Me()
        {
            var idClaim = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
            if (string.IsNullOrEmpty(idClaim))
                return Unauthorized();

            if (!int.TryParse(idClaim, out var id))
                return Unauthorized();

            // Using repo directly would be better, but reuse service to find user
            var user = await _user.FindUserByPasswordAndEmail("", "");
            // This service method searches by password and email; for now return minimal info from claims

            return Ok(new { Id = id, Name = User.Identity?.Name, Email = User.FindFirst(ClaimTypes.Email)?.Value });
        }
    }
}
